{"version":3,"sources":["App.js","index.js"],"names":["Column","props","className","onClick","map","rowIndex","chips","App","useState","board","changeBoard","playerTurn","changePlayerTurn","playColumn","columnNumber","length","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mLAGA,SAASA,EAAOC,GACd,OACE,qBAAKC,UAAU,SAASC,QAASF,EAAME,QAAvC,SACG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAACC,GAAD,OACtB,qBAAKH,UAAS,eAAUD,EAAMK,MAAMD,KAAkBA,QAM/C,SAASE,IACtB,MAA6BC,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAA/D,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAuCF,mBAAS,OAAhD,mBAAOG,EAAP,KAAmBC,EAAnB,KASA,SAASC,EAAWC,GACdL,EAAMK,GAAcC,OAAS,IAC/BN,EAAMK,GAAN,sBAA0BL,EAAMK,IAAhC,CAA+CH,IAC/CD,EAAY,YAAID,IARhBG,EADiB,QAAfD,EACe,SAEA,QAUrB,OACE,qBAAKT,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,cAACF,EAAD,CAAQG,QAAS,kBAAMU,EAAW,IAAIP,MAAOG,EAAM,KACnD,cAACT,EAAD,CAAQG,QAAS,kBAAMU,EAAW,IAAIP,MAAOG,EAAM,KACnD,cAACT,EAAD,CAAQG,QAAS,kBAAMU,EAAW,IAAIP,MAAOG,EAAM,KACnD,cAACT,EAAD,CAAQG,QAAS,kBAAMU,EAAW,IAAIP,MAAOG,EAAM,KACnD,cAACT,EAAD,CAAQG,QAAS,kBAAMU,EAAW,IAAIP,MAAOG,EAAM,KACnD,cAACT,EAAD,CAAQG,QAAS,kBAAMU,EAAW,IAAIP,MAAOG,EAAM,KACnD,cAACT,EAAD,CAAQG,QAAS,kBAAMU,EAAW,IAAIP,MAAOG,EAAM,UCnC3D,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACb,EAAD,MAEFS,K","file":"static/js/main.29fcf73e.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\n\nfunction Column(props) {\n  return (\n    <div className=\"column\" onClick={props.onClick}>\n      {[5, 4, 3, 2, 1, 0].map((rowIndex) => (\n        <div className={`slot ${props.chips[rowIndex]}`} key={rowIndex}></div>\n      ))}\n    </div>\n  );\n}\n\nexport default function App() {\n  const [board, changeBoard] = useState([[], [], [], [], [], [], []]);\n  const [playerTurn, changePlayerTurn] = useState(\"red\");\n\n  function togglePlayerTurn() {\n    if (playerTurn === \"red\") {\n      changePlayerTurn(\"yellow\");\n    } else {\n      changePlayerTurn(\"red\");\n    }\n  }\n  function playColumn(columnNumber) {\n    if (board[columnNumber].length < 6) {\n      board[columnNumber] = [...board[columnNumber], playerTurn];\n      changeBoard([...board]);\n      togglePlayerTurn();\n    }\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"board\">\n        <Column onClick={() => playColumn(0)} chips={board[0]} />\n        <Column onClick={() => playColumn(1)} chips={board[1]} />\n        <Column onClick={() => playColumn(2)} chips={board[2]} />\n        <Column onClick={() => playColumn(3)} chips={board[3]} />\n        <Column onClick={() => playColumn(4)} chips={board[4]} />\n        <Column onClick={() => playColumn(5)} chips={board[5]} />\n        <Column onClick={() => playColumn(6)} chips={board[6]} />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}